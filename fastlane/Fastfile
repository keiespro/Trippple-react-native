fastlane_version "2.7.0"

platform :android do

  desc "Build android release and upload to google play for production"
  lane :submit do
    gradle(
      task: 'assemble',
      build_type: 'Release',
      project_dir: 'android',
      gradle_path: 'gradlew',
      print_command_output: false
    )
    supply
  end

  desc "Build android release and upload to google play as a beta"
  lane :beta do
    gradle(
      task: 'assemble',
      build_type: 'Release',
      project_dir: 'android',
      gradle_path: 'gradlew',
      print_command_output: false
    )
    supply(track: 'alpha')
  end


  desc "Build android release and upload to google play as a beta"
  lane :alpha_upload do
    supply(track: 'alpha')
  end
end

platform :ios do

  desc "This will make sure the profiles and certificates are up to date"
  lane :certs do
    cert
    sigh
  end

  desc "Version bump"
  lane :bump do
    increment_build_number
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  lane :beta do
    cert
    sigh
    increment_build_number(
      xcodeproj: 'ios/Trippple.xcodeworkspace'
    )
    cocoapods
    gym(
      scheme: "Trippple",
      configuration: "Release",
      project: 'ios/Trippple.xcodeworkspace',
      suppress_xcode_output: true
    )
    pilot(
      # skip_waiting_for_build_processing: true
    )
  end

  desc "Tag a version"
  lane :tag do

        # ensure_git_status_clean
        # ensure_git_branch(branch: 'master')
        # push_to_git_remote
  end

  desc "Deploy a new version to the App Store"
  lane :submit do
    cocoapods
    # changelog = prompt(text: "Enter the change log: ", multi_line_end_keyword: "END")
    # increment_version_number(bump_type: "patch")
    gym(
      scheme: "Release",
      clean: true,
      suppress_xcode_output: true
    )
    deliver(
      submit_for_review: true,
      skip_screenshots: true,
      force: true
    )
    slack(
      message: "App Submitted for Review, latest TestFlight version probably pointing to production server",
      slack_url: "https://hooks.slack.com/services/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"
    )

  end

  lane :upload do
    deliver(
      submit_for_review: true,
      skip_screenshots: true,
      force: true
    )
  end

 lane :pushdebug do
    cert
    sigh
    cocoapods
    gym(scheme: "TripppleDebug")
    crashlytics(
      # groups: 'team',
      emails: "alehlopeh@gmail.com",
      build_secret: 'eaa5ad5f554fac730663183c7152d183a31d7ab7bb6dc46714db68da63b2376b',
      api_token: '9f3360a634ff36e817a34ba898a19118cc1391ff',
      notes: "Automatic iOS DEBUG Build"
    )
    slack(
      message: "Successfully deployed new DEBUG build to Crashlytics beta. Download at https://apps-ios.crashlytics.com/projects/57378de5785c7f4dd100001b",
      slack_url: 'https://hooks.slack.com/services/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'
    )
  end



  after_all do |lane|
    puts lane
  end

  error do |lane, exception|
    puts exception.inspect
  end
end
