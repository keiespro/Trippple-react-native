#;generate a new release-tag
#;use  this file by sourcing it.
#;then running t3p-pkg to generate a release.

t3p-pkg() {
 #- set up some constants
 export t3p_releasetag=`git show HEAD | head -1 | awk '{print $2}'`;
 export t3p_releasedir="WorkingHeads/Releases/$t3p_releasetag";
 export t3p_bundledir="WorkingHeads/Bundles/";
 export t3p_bundlezip="WorkingHeads/Bundles/$t3p_releasetag.zip";
 export t3p_buildsummary="WorkingHeads/Bundles/$t3p_releasetag.t3p_summary";

 #- initiate process;
 t3p-tell "Compiling new Release: ($t3p_releasetag) into $t3p_releasedir";
 t3p-tell "[Return] To begin"
 read

 #- targets
 mkdir -p $t3p_releasedir;
 mkdir -p $t3p_bundledir/;

 #- run-script
 #- basically packages the following dirs, then compresses it all.
 #- release are tagged by sha so we can associate a working set of dependencies
 #- to a node in the source tree.

 t3p-pkg-cp-dir node_modules;
 t3p-pkg-cp-dir trippple.xcodeproj;
 t3p-pkg-cp-dir iOS;
 t3p-pkg-cp-dir lib;

 t3p-snapshot;

 #-summary
 t3p-tell "Tripple Build Summary:"
 t3p-tell "Bundle(zip) -> $t3p_bundlezip"
 t3p-tell "Release: $t3p_releasetag"

 #-coming soon
 t3p-tell "Coming Soon!: t3p-restore <sha> -- rebuilds pacakge settings"
}

t3p-tell() {
 echo "$@"
}

t3p-pkg-cp-dir() {
 __t3p-pkg-cp-dir $t3p_releasedir $@
}

__t3p-pkg-cp-dir() {
  t3p-tell "Copying $2...";
  __t3p-work-and-track cp -Rv $2 $1/$2
}

t3p-snapshot() {
 t3p-tell "Finalising Snapshot...";
 __t3p-work-and-track zip -r $t3p_bundlezip $t3p_releasedir;
 t3p-tell "Done";
}

t3p-snapshot-test() {
 __t3p-work-and-track zip -r $t3p_bundlezip $t3p_releasedir;
 t3p-tell "Done";
}

__t3p-work-and-track() {
 time $@ > $t3p_buildsummary;
}